// Generated by cpp11: do not edit by hand
// clang-format off

#include "cpp11example_types.h"
#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// example.cpp
cpp11::external_pointer<ExampleClass> create_example_class_cpp(int vec_size);
extern "C" SEXP _cpp11example_create_example_class_cpp(SEXP vec_size) {
  BEGIN_CPP11
    return cpp11::as_sexp(create_example_class_cpp(cpp11::as_cpp<cpp11::decay_t<int>>(vec_size)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_cpp11example_create_example_class_cpp", (DL_FUNC) &_cpp11example_create_example_class_cpp, 1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_cpp11example(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
